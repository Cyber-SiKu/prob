// to trigger a full tycho build please use 'gradle deleteFromClassPath completeInstall'
import org.apache.tools.ant.taskdefs.condition.Os

project.ext{

	targetRepositories = ["http://download.eclipse.org/releases/indigo/",
                          "http://rodin-b-sharp.sourceforge.net/updates",
                          "http://rodin-b-sharp.sourceforge.net/core-updates"
                          , "http://www.stups.uni-duesseldorf.de/ProB/buildlibs/theory/"
                          ]

	groupID = "de.prob"
}

apply from: 'tycho_build.gradle'

// Local tasks



project(':de.prob.core') {

repositories {
  mavenCentral()
  maven {
	name "snapshots"
	url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
	maven {
	name "release"
	url "https://oss.sonatype.org/content/repositories/releases/"
  }
}

        def parser_version = '2.5.6'

	dependencies {
	 compile group: "de.hhu.stups", name: "answerparser", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "bparser", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "cliparser", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "ltlparser", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "parserbase", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "prologlib", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "unicode", version: parser_version , changing: true
	 compile group: "de.hhu.stups", name: "theorymapping", version: parser_version , changing: true
	 compile 'commons-lang:commons-lang:2.6'
	}

}

project(':de.prob.ui') {
repositories {
  mavenCentral()
  maven {
    name "snapshots"
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
    maven {
    name "release"
    url "https://oss.sonatype.org/content/repositories/releases/"
  }
}
	dependencies {
	 	compile 'commons-codec:commons-codec:1.6'
	}
}


def download(address,target) {
	    def file = new FileOutputStream(target)
	    def out = new BufferedOutputStream(file)
	    out << new URL(address).openStream()
	    out.close()
}

task downloadCli << {
		def dir = workspacePath+'de.prob.core/prob/'
		delete file(dir)
	    new File(dir).mkdirs()

		['leopard64':'macos','linux32':'linux','linux64':'linux64','win32':'windows'].each {
		def n = it.getKey()

		def targetdir = dir+it.getValue()
		def targetzip = dir+"probcli_${n}.zip"
		def url = "http://nightly.cobra.cs.uni-duesseldorf.de/cli/probcli_${n}.zip"
		download(url,targetzip)
	    FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
		delete file(targetzip)
	}

	def targetdir = dir+"windows/"
	def targetzip = targetdir+"windowslib32.zip"
	download("http://nightly.cobra.cs.uni-duesseldorf.de/cli/windowslib32.zip",targetzip)
	FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
	delete file(targetzip)

}



task downloadCli2 ( type: Exec ) {

		def dir = workspacePath+'de.prob.core/prob/'
		delete file(dir)
	    new File(dir).mkdirs()

		['leopard64':'macos','linux32':'linux','linux64':'linux64','win32':'windows'].each {
		def n = it.getKey()

		def targetdir = dir+it.getValue()
		def targetzip = dir+"probcli_${n}.zip"
		def url = "http://nightly.cobra.cs.uni-duesseldorf.de/cli/probcli_${n}.zip"
		download(url,targetzip)
	    FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
		delete file(targetzip)
	}

	def targetdir = dir+"windows/"
	def targetzip = targetdir+"windowslib32.zip"
	download("http://nightly.cobra.cs.uni-duesseldorf.de/cli/windowslib32.zip",targetzip)
	FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
	delete file(targetzip)


}



completeInstall.dependsOn downloadCli
completeInstall.dependsOn subprojects.setClassPath

task deleteOldArtifacts(type: Delete) {
  	String updateSite = workspacePath+'updatesite'
	delete updateSite
}

task collectArtifacts(type:Copy) {
	    from workspacePath + groupID+'.repository/target/repository/'
	    into workspacePath + 'updatesite'
	    from workspacePath + "index.html"
	    into workspacePath + 'updatesite'
}
