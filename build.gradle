
targetRepositories = ["http://cobra.cs.uni-duesseldorf.de/prob_dev_target/","http://download.eclipse.org/releases/indigo/","http://rodin-b-sharp.sourceforge.net/updates"]	

groupID = "de.prob"

apply from: 'tycho_build.gradle'

// Local tasks

project(':de.prob.core') {

	repositories {
		maven {
		  name "cobra"
		  url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
		}
	}


	def parser_version = '2.4.8-SNAPSHOT'

	dependencies {
	 compile group: "de.prob", name: "answerparser", version: parser_version , changing: true
	 compile group: "de.prob", name: "bparser", version: parser_version , changing: true
	 compile group: "de.prob", name: "cliparser", version: parser_version , changing: true
	 compile group: "de.prob", name: "ltlparser", version: parser_version , changing: true
	 compile group: "de.prob", name: "parserbase", version: parser_version , changing: true
	 compile group: "de.prob", name: "prologlib", version: parser_version , changing: true
	 compile group: "de.prob", name: "unicode", version: parser_version , changing: true
	 compile 'jgrapht:jgrapht:0.8.3'
	 compile 'commons-lang:commons-lang:2.6'
	 compile group: "de.prob", name: "cli", version: "2.0.0-milestone-5-SNAPSHOT" , changing: true
	}

	configurations.all {
      resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}	
}

project(':de.prob.ui') {
	repositories {
		maven {
		  name "cobra"
		  url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
		}
	}
	dependencies {
	 	compile 'commons-codec:commons-codec:1.6'
	}
}


def download(address,target) {
	    def file = new FileOutputStream(target)
	    def out = new BufferedOutputStream(file)
	    out << new URL(address).openStream()
	    out.close()
}

task downloadCli << {
		dir = workspacePath+'de.prob.core/prob/'
		delete file(dir)
	    new File(dir).mkdirs() 
	
		['leopard64':'macos','linux':'linux','linux64':'linux64','win32':'windows'].each {
		n = it.getKey()
	
		targetdir = dir+it.getValue()
		targetzip = dir+"probcli_${n}.zip"
		url = "http://nightly.cobra.cs.uni-duesseldorf.de/cli/probcli_${n}.zip"
		download(url,targetzip)
	    FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
		delete file(targetzip)
	}

	targetdir = dir+"windows/"
	targetzip = targetdir+"windowslib.zip"
	download("http://nightly.cobra.cs.uni-duesseldorf.de/cli/windowslib.zip",targetzip)
	FileTree zip = zipTree(targetzip)
	    copy {
		   from zip
		   into targetdir
	    }
	delete file(targetzip)
	
}

task deleteOldArtifacts(type: Delete) {
  	String updateSite = workspacePath+'updatesite'
	delete updateSite
}

task collectArtifacts(type:Copy) {
	    from workspacePath + groupID+'.repository/target/repository/'
	    into workspacePath + 'updatesite'
	    from workspacePath + "index.html"
	    into workspacePath + 'updatesite'
}

